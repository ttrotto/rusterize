name: CI

on:
  release:
    types: [created]
  push:
    branches:
       - std-mpsc

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt

      - name: Lint with rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt

      - name: Test with cargo
        uses: actions-rs/cargo@v1.0.1
        with:
          command: test
          toolchain: nightly

  build:
    runs-on: ${{ matrix.os }}
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.10, 3.11, 3.12]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip

      - name: Install package deps with uv
        run: | 
          uv pip install requirements.txt

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Build Python package
        run: maturin develop --release --profile dist-release

  python-publish:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.10, 3.11, 3.12]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip

      - name: Build python package
        run: maturin develop --release --profile dist-release --interpreter python${{matrix.python_version}}

      - name: List wheels
        if: matrix.os == 'windows-latest'
        run: dir target\wheels\

      - name: List wheels
        if:  matrix.os != 'windows-latest'
        run: find ./target/wheels/

      - name: Install wheels
        if:  matrix.os == 'windows-latest'
        run: pip install --find-links=target\wheels rusterize

      - name: Install wheels
        if:  matrix.os != 'windows-latest'
        run: pip install target/wheels/rusterize*.whl

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/wheels/hyperjson*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: TestPyPi publish
        if: github.event_name == 'release' && github.event.action == 'created'
        env:
          MATURIN_PASSWORD: ${{ secrets.PYPI }}
        run: poetry run maturin publish --username __token__
