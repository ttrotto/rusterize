name: CI

on:
  push:
    branches:
      - compile

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
          - runner: ubuntu-22.04
            target: ppc64le
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Store RUSTFLAGS in ENV
        id: features
        run: |
          FEATURES=+sse3,+ssse3,+sse4.1,+sse4.2,+popcnt,+cmpxchg16b,+avx,+avx2,+fma,+bmi1,+bmi2,+lzcnt,+pclmulqdq,+movbe
          echo "features=$FEATURES" >> $GITHUB_OUTPUT
      - name: Set RUSTFLAGS for x86_64
        if: matrix.platform.target == 'x86_64'
        env:
          FEATURES: ${{ steps.features.outputs.features }}
        run: |
          echo "RUSTFLAGS=-C target-feature=$FEATURES" >> $GITHUB_ENV
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --profile dist-release --out dist --find-interpreter
          sccache: "true"
          manylinux: manylinux_2_28
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  musllinux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Store RUSTFLAGS in ENV
        id: features
        run: |
          FEATURES=+sse3,+ssse3,+sse4.1,+sse4.2,+popcnt,+cmpxchg16b,+avx,+avx2,+fma,+bmi1,+bmi2,+lzcnt,+pclmulqdq,+movbe
          echo "features=$FEATURES" >> $GITHUB_OUTPUT
      - name: Set RUSTFLAGS for x86_64
        if: matrix.platform.target == 'x86_64'
        env:
          FEATURES: ${{ steps.features.outputs.features }}
        run: |
          echo "RUSTFLAGS=-C target-feature=$FEATURES" >> $GITHUB_ENV
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --profile dist-release --out dist --find-interpreter
          sccache: "true"
          manylinux: manylinux_2_28
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runner: windows-latest
            target: x64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: Store RUSTFLAGS in ENV
        id: features
        shell: bash
        run: |
          FEATURES=+sse3,+ssse3,+sse4.1,+sse4.2,+popcnt,+cmpxchg16b,+avx,+avx2,+fma,+bmi1,+bmi2,+lzcnt,+pclmulqdq,+movbe
          echo "features=$FEATURES" >> $GITHUB_OUTPUT
      - name: Set RUSTFLAGS for x64
        if: matrix.platform.target == 'x64'
        env:
          FEATURES: ${{ steps.features.outputs.features }}
        run: |
          echo "RUSTFLAGS=-C target-feature=$FEATURES" >> $GITHUB_ENV
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --profile dist-release --out dist --find-interpreter
          sccache: "true"
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist


  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Store RUSTFLAGS in ENV
        id: features
        run: |
          FEATURES=+sse3,+ssse3,+sse4.1,+sse4.2,+popcnt,+cmpxchg16b,+avx,+avx2,+fma,+bmi1,+bmi2,+lzcnt,+pclmulqdq,+movbe
          echo "features=$FEATURES" >> $GITHUB_OUTPUT
      - name: Set RUSTFLAGS for x86_64
        if: matrix.platform.target == 'x86_64'
        env:
          FEATURES: ${{ steps.features.outputs.features }}
        run: |
          echo "RUSTFLAGS=-C target-feature=$FEATURES" >> $GITHUB_ENV
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --profile dist-release --out dist --find-interpreter
          sccache: "true"
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

